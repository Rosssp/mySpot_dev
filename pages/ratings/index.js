import styles from "./ratings.module.scss";
import React, { useEffect, useRef, useState } from "react";
import Spacer from "../../components/UI/spacer/spacer";
import DefaultButton from "../../components/UI/defaultButton/defaultButton";
import RatingsLayout from "../../layout/RatingsLayout/ratingsLayout";
import { motion } from "framer-motion";
import cn from "classnames";
import instance from "../../instanceAxios";
import { useRouter } from "next/router";
import Head from "next/head";

export default function index() {
    const router = useRouter();
    const [selectedValue, setSelectedValue] = useState("spots");

    const [getTop10Users, setGetTop10Users] = useState();
    const [getTop10Spots, setgetTop10Spots] = useState();
    async function getUsersData() {
        await instance
            .get("/api/users/top10.json")
            .then(function (response) {
                console.log("res", response);
                setGetTop10Users(response?.data);
            })
            .catch(function (error) {
                console.log("err", error);
            });
    }
    async function getSpotsData() {
        await instance
            .get("/api/spots/top10.json")
            .then(function (response) {
                console.log("spots", response);
                setgetTop10Spots(response?.data);
            })
            .catch(function (error) {
                console.log("err", error);
            });
    }
    useEffect(() => {
        getUsersData();
        getSpotsData();
    }, [router]);

    const handleButtonClick = (value) => {
        setSelectedValue(value);
    };

    const usersRef = useRef(null);
    const spotsRef = useRef(null);

    const userMockData = [
        {
            id: 1,
            name: "Dmitry",
            nickname: "bobob",
            vk: "https://vk.com/feed",
            score: 13,
            avatar: {
                id: 21,
                url: "https://klike.net/uploads/posts/2022-11/1667980142_030.jpg",
            },
        },
        {
            id: 13,
            name: "lol",
            nickname: "USER",
            vk: "https://vk.com/feed",
            tg: "https://t.me/r0sssp",
            score: 28,
            avatar: {
                id: 36,
                url: "https://klike.net/uploads/posts/2022-11/1667980142_030.jpg",
            },
        },
    ];
    const spotMockData = [
        {
            id: 1,
            title: "спот 1",
            description: "descr",
            address: "addressssss",
            rating_avg: 3.0,
            images: [
                {
                    url: "https://klike.net/uploads/posts/2022-11/1667980142_030.jpg",
                },
                {
                    url: "https://klike.net/uploads/posts/2022-11/1667980142_030.jpg",
                },
            ],
        },
        {
            id: 12,
            title: "спот 12",
            description: "dessqqqscr",
            address: "qqqQQaddressssss",
            rating_avg: 1.0,
            images: [
                {
                    url: "https://klike.net/uploads/posts/2022-11/1667980142_030.jpg",
                },
                {
                    url: "https://klike.net/uploads/posts/2022-11/1667980142_030.jpg",
                },
            ],
        },
    ];

    return (
        <motion.div
            className={cn("main__height main__wrapper", styles.wrapper)}
        >
            <Head>
                <title>MY SPOT | РЕЙТИНГИ</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <meta property="og:title" content="MY SPOT" key="title" />
                <meta
                    name="viewport"
                    content="width=device-width, initial-scale=1"
                />
                <link
                    rel="icon"
                    type="image/png"
                    sizes="144x144"
                    href="/icon.svg"
                />
                <script
                    src="https://api-maps.yandex.ru/3.0/?apikey=7066165f-a263-468f-9123-b4a3a32bdfb3&lang=ru_RU"
                    type="text/javascript"
                ></script>
            </Head>
            <Spacer size="xl" />
            <h1>РЕЙТИНГИ —</h1>
            <div className={styles.raiting_layout}>
                <div className={styles.buttons}>
                    <DefaultButton
                        type="staticActive"
                        handleClick={() => handleButtonClick("spots")}
                    >
                        <p
                            style={{
                                opacity: selectedValue === "spots" ? 1 : 0.2,
                                transition: "0.2s all ease-in-out",
                            }}
                        >
                            споты
                        </p>
                    </DefaultButton>
                    <DefaultButton
                        type="staticActive"
                        handleClick={() => handleButtonClick("users")}
                    >
                        <p
                            style={{
                                opacity: selectedValue === "users" ? 1 : 0.2,
                                transition: "0.2s all ease-in-out",
                            }}
                        >
                            пользователи
                        </p>
                    </DefaultButton>
                </div>
                <div className={styles.raiting_container}>
                    {selectedValue === "users" &&
                        getTop10Users?.map((item) => (
                            <>
                                <div ref={usersRef}>
                                    <RatingsLayout
                                        name={item?.nickname}
                                        avatar={item?.avatar?.url}
                                        score={item?.score}
                                        socialItems={[item?.tg, item?.vk]}
                                    />
                                </div>
                                <hr />
                            </>
                        ))}
                    {selectedValue === "spots" &&
                        getTop10Spots?.map((item) => (
                            <>
                                <div ref={spotsRef}>
                                    <RatingsLayout
                                        id={item?.id}
                                        name={item?.title}
                                        spotImages={item?.images}
                                        rating={item?.rating_avg}
                                        address={item?.description}
                                    />
                                </div>
                                <hr />
                            </>
                        ))}
                </div>
            </div>
            <Spacer size="xl" />
        </motion.div>
    );
}

// export async function getServerSideProps({ params }) {
//     try {
//         const users = await instance
//             .get("/api/users/top10.json")
//             .then((response) => response?.data);
//         const spots = await instance
//             .get("/api/spots/top10.json")
//             .then((response) => response?.data);

//         return {
//             props: {
//                 users: users,
//                 spots: spots,
//             },
//         };
//     } catch (error) {
//         return { redirect: { destination: "/", permanent: false } };
//     }
// }
